-- VHDL Entity fahim_segment_lib.tb_gclock_1.symbol
--
-- Created:
--          by - user.UNKNOWN (KTP12R7182)
--          at - 19:12:51 01/05/2018
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2016.2 (Build 5)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

entity tb_gclock_1 is
   port( 
      clk    : in     STD_LOGIC;
      reset  : in     STD_LOGIC;
      slider : in     STD_LOGIC;
      le     : out    std_logic;
      oe     : out    std_logic;
      sclk   : out    std_logic;
      sdi    : out    std_logic
   );

-- Declarations

end tb_gclock_1 ;

--
-- VHDL Architecture fahim_segment_lib.tb_gclock_1.struct
--
-- Created:
--          by - user.UNKNOWN (KTP12R7182)
--          at - 19:12:51 01/05/2018
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2016.2 (Build 5)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

library fahim_segment_lib;

architecture struct of tb_gclock_1 is

   -- Architecture declarations

   -- Internal signal declarations
   signal d0        : STD_LOGIC_VECTOR(3 downto 0);
   signal d1        : STD_LOGIC_VECTOR(3 downto 0);
   signal d2        : STD_LOGIC_VECTOR(3 downto 0);
   signal d3        : STD_LOGIC_VECTOR(3 downto 0);
   signal disp_up   : std_logic;
   signal hour_cnt  : STD_LOGIC_VECTOR(7 downto 0);
   signal hour_dig1 : STD_LOGIC_VECTOR(3 downto 0);
   signal hour_dig2 : STD_LOGIC_VECTOR(3 downto 0);
   signal min_cnt   : STD_LOGIC_VECTOR(7 downto 0);
   signal min_dig1  : STD_LOGIC_VECTOR(3 downto 0);
   signal min_dig2  : STD_LOGIC_VECTOR(3 downto 0);
   signal sdata_in  : std_logic_vector(31 downto 0);
   signal sec_cnt   : STD_LOGIC_VECTOR(7 downto 0);
   signal sec_dig1  : STD_LOGIC_VECTOR(3 downto 0);
   signal sec_dig2  : STD_LOGIC_VECTOR(3 downto 0);
   signal sec_pulse : std_logic;
   signal spi_clk   : std_logic;


   -- Component Declarations
   component BCD
   port (
      clk       : in     STD_LOGIC;
      hour_cnt  : in     STD_LOGIC_VECTOR (7 downto 0);
      min_cnt   : in     STD_LOGIC_VECTOR (7 downto 0);
      sec_cnt   : in     STD_LOGIC_VECTOR (7 downto 0);
      hour_dig1 : out    STD_LOGIC_VECTOR (3 downto 0);
      hour_dig2 : out    STD_LOGIC_VECTOR (3 downto 0);
      min_dig1  : out    STD_LOGIC_VECTOR (3 downto 0);
      min_dig2  : out    STD_LOGIC_VECTOR (3 downto 0);
      sec_dig1  : out    STD_LOGIC_VECTOR (3 downto 0);
      sec_dig2  : out    STD_LOGIC_VECTOR (3 downto 0)
   );
   end component;
   component display_update
   port (
      clk     : in     STD_LOGIC;
      reset   : in     STD_LOGIC;
      disp_up : out    STD_LOGIC
   );
   end component;
   component g_clock1
   port (
      clk       : in     STD_LOGIC;
      reset     : in     STD_LOGIC;
      sec_pulse : out    STD_LOGIC
   );
   end component;
   component lutled
   port (
      d0  : in     std_logic_vector (3 downto 0);
      d1  : in     std_logic_vector (3 downto 0);
      d2  : in     std_logic_vector (3 downto 0);
      d3  : in     std_logic_vector (3 downto 0);
      spi : out    std_logic_vector (31 downto 0)
   );
   end component;
   component minandhouragain
   port (
      clk       : in     std_logic;
      sec_pulse : in     std_logic;
      hour      : out    std_logic_vector (7 downto 0);
      min       : out    std_logic_vector (7 downto 0);
      sec       : out    std_logic_vector (7 downto 0)
   );
   end component;
   component slider1
   port (
      clk       : in     STD_LOGIC;
      hour_dig1 : in     STD_LOGIC_VECTOR (3 downto 0);
      hour_dig2 : in     STD_LOGIC_VECTOR (3 downto 0);
      min_dig1  : in     STD_LOGIC_VECTOR (3 downto 0);
      min_dig2  : in     STD_LOGIC_VECTOR (3 downto 0);
      sec_dig1  : in     STD_LOGIC_VECTOR (3 downto 0);
      sec_dig2  : in     STD_LOGIC_VECTOR (3 downto 0);
      slider    : in     STD_LOGIC;
      d0        : out    STD_LOGIC_VECTOR (3 downto 0);
      d1        : out    STD_LOGIC_VECTOR (3 downto 0);
      d2        : out    STD_LOGIC_VECTOR (3 downto 0);
      d3        : out    STD_LOGIC_VECTOR (3 downto 0)
   );
   end component;
   component spiclock
   port (
      clk     : in     STD_LOGIC;
      reset   : in     STD_LOGIC;
      spi_clk : out    STD_LOGIC
   );
   end component;
   component spiseven
   port (
      clk       : in     std_logic ;
      disp_up   : in     std_logic ;
      reset     : in     std_logic ;
      sdata_in  : in     std_logic_vector (31 downto 0);
      spi_clk   : in     std_logic ;
      sclk_out  : out    std_logic ;
      sdata_out : out    std_logic ;
      sync_out  : out    std_logic 
   );
   end component;

   -- Optional embedded configurations
   -- pragma synthesis_off
   for all : BCD use entity fahim_segment_lib.BCD;
   for all : display_update use entity fahim_segment_lib.display_update;
   for all : g_clock1 use entity fahim_segment_lib.g_clock1;
   for all : lutled use entity fahim_segment_lib.lutled;
   for all : minandhouragain use entity fahim_segment_lib.minandhouragain;
   for all : slider1 use entity fahim_segment_lib.slider1;
   for all : spiclock use entity fahim_segment_lib.spiclock;
   for all : spiseven use entity fahim_segment_lib.spiseven;
   -- pragma synthesis_on


begin
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 3 eb3
   oe <= '0';                                   


   -- Instance port mappings.
   U_2 : BCD
      port map (
         clk       => clk,
         sec_cnt   => sec_cnt,
         min_cnt   => min_cnt,
         hour_cnt  => hour_cnt,
         sec_dig1  => sec_dig1,
         sec_dig2  => sec_dig2,
         min_dig1  => min_dig1,
         min_dig2  => min_dig2,
         hour_dig1 => hour_dig1,
         hour_dig2 => hour_dig2
      );
   U_7 : display_update
      port map (
         clk     => clk,
         disp_up => disp_up,
         reset   => reset
      );
   U_0 : g_clock1
      port map (
         clk       => clk,
         sec_pulse => sec_pulse,
         reset     => reset
      );
   U_4 : lutled
      port map (
         d0  => d1,
         d1  => d0,
         d2  => d3,
         d3  => d2,
         spi => sdata_in
      );
   U_1 : minandhouragain
      port map (
         clk       => clk,
         sec_pulse => sec_pulse,
         sec       => sec_cnt,
         min       => min_cnt,
         hour      => hour_cnt
      );
   U_3 : slider1
      port map (
         clk       => clk,
         slider    => slider,
         sec_dig1  => sec_dig1,
         sec_dig2  => sec_dig2,
         min_dig1  => min_dig1,
         min_dig2  => min_dig2,
         hour_dig1 => hour_dig1,
         hour_dig2 => hour_dig2,
         d0        => d0,
         d1        => d1,
         d2        => d2,
         d3        => d3
      );
   U_6 : spiclock
      port map (
         clk     => clk,
         spi_clk => spi_clk,
         reset   => reset
      );
   U_5 : spiseven
      port map (
         clk       => clk,
         disp_up   => disp_up,
         reset     => reset,
         sdata_in  => sdata_in,
         spi_clk   => spi_clk,
         sclk_out  => sclk,
         sdata_out => sdi,
         sync_out  => le
      );

end struct;
